# XXX: Miri cannot emulate the Windows syscalls. So it's pointless to run it.

name: Rust
on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, win32, win64]
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
          - build: macos
            os: macos-latest
            rust: stable
          - build: win32
            os: windows-latest
            rust: stable-i686-msvc
          - build: win64
            os: windows-latest
            rust: stable-x86_64-msvc
    steps:
      - uses: actions/checkout@v1
      - name: Cache CARGO_HOME
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-home-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-home
      - run: bash ci/install-rustup.bash
      - run: bash ci/install-rust.bash ${{ matrix.rust }}
      - if: runner.os == 'Linux'
        shell: bash
        run: |
          rustup component add rustfmt
          cargo fmt -- --check
      - run: cargo build --verbose
      - run: cargo test --verbose

  clippy:
    name: Clippy
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache CARGO_HOME
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-home-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-home
      - run: bash ci/install-rustup.bash
      - run: bash ci/install-rust.bash stable
      - run: rustup component add clippy
      - run: cargo clippy --all --all-targets
