# XXX: Miri cannot emulate the Windows syscalls. So it's pointless to run it.

name: Rust
on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  # Also trigger on page_build, as well as release created events
  page_build:
  release:
    types: # This configuration does not affect the page_build event above
      - created

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, win32, win64]
        include:
          - build: linux
            os: ubuntu-latest
            rust: 1.36.0
          - build: macos
            os: macos-latest
            rust: 1.36.0
          - build: win32
            os: windows-latest
            rust: 1.36.0-i686-msvc
          - build: win64
            os: windows-latest
            rust: 1.36.0-x86_64-msvc
    steps:
      - uses: actions/checkout@v1
      - name: Cache CARGO_HOME
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-home-${{ hashFiles('Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-home
      - run: |
          rustup update --no-self-update ${{ matrix.rust }}
          rustup default ${{ matrix.rust }}
      - run: |
          rustup -V
          rustc -Vv
          cargo -V
      - if: runner.os == 'Linux'
        shell: bash
        run: |
          rustup component add rustfmt
          cargo fmt -- --check
      - run: cargo build --verbose
      - run: cargo test --verbose
      # FIXME: Use `cargo install` when we switch to Rust 1.41.0
      - name: Before cache
        shell: bash
        run: |
          case ${{ runner.os }} in
            Linux ) OS=linux;;
            Windows ) OS=windows;;
            macOS ) OS=osx;;
          esac
          curl -sSL "https://github.com/lzutao/cargo-cache/releases/download/0.3.3/cargo-cache-0.3.3-${OS}.tar.gz" | tar -xzf - -C ~/.cargo/bin
          cargo cache --autoclean

  clippy:
    name: Clippy
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache CARGO_HOME
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-home-${{ hashFiles('Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-home
      - run: |
          rustup update --no-self-update nightly
          rustup default nightly
      - run: |
          rustup -V
          rustc -Vv
          cargo -V
      - run: rustup component add clippy
      - run: cargo clippy --all --all-targets
      - name: Before cache
        run: |
          cargo install --debug --bin cargo-cache -- cargo-cache
          cargo cache --autoclean
